package apiCloneIfood.controller;
import java.util.Optional;
import java.util.List;

import org.springframework.beans.BeanUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import apiCloneIfood.domain.model.Cozinha;
import apiCloneIfood.domain.model.Estado;
import apiCloneIfood.domain.repository.CozinhaRepository;
import apiCloneIfood.domain.repository.EstadoRepository;
import apiCloneIfood.domain.services.EstadoService;
@RestController
@RequestMapping("/estado")
public class EstadoController {
	@Autowired
	private EstadoService estadoService;
	
	@Autowired
     EstadoRepository estadoRepository;


	@GetMapping
	public List<Estado> listar() {
		return estadoService.listar();

	}

	@GetMapping("/{estadoId}")
	public ResponseEntity<Estado> buscar(@PathVariable long estadoId) {
         Optional<Estado> cozinha = estadoRepository.findById(estadoId);
         
         if(cozinha.isPresent()) {
		  
        	 return ResponseEntity.ok(cozinha.get());
	
        
         }
         
          return ResponseEntity.notFound().build();
	}

	@PostMapping
	public void adicionar(@RequestBody Estado estado) {
		estadoService.adicionar(estado);
	}

	@PutMapping("/{estadoId}")
	public ResponseEntity<Estado> atualizar(@PathVariable long estadoId, @RequestBody Estado estado) {

		Optional<Estado> estadoAtual = estadoRepository.findById(estadoId);
         if(estadoAtual.isPresent()) {
		BeanUtils.copyProperties(estado, estadoAtual.get(), "id");
		
		Estado estadoSalvar = estadoService.adicionar(estadoAtual.get());
		
		    ResponseEntity.ok().body(estadoSalvar);

		 
        } 
         return ResponseEntity.notFound().build();

	}

	@DeleteMapping("/{estadoId}")
	public void deletar(@PathVariable long estadoId) {
		Estado estadoAtual = buscar(estadoId);

		estadoService.deletar(estadoAtual);

	}
}

